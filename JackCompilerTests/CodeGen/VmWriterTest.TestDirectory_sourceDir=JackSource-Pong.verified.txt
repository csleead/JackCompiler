{
  Ball:
function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 0
push this 0
sub
pop this 2
push argument 1
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto IF_FALSE_0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 1
lt
pop this 8
push this 0
push argument 0
lt
pop this 9
goto IF_END_0
label IF_FALSE_0
push this 0
push argument 0
lt
pop this 8
push this 1
push argument 1
lt
pop this 9
label IF_END_0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto IF_FALSE_1
push this 4
push this 5
add
pop this 4
goto IF_END_1
label IF_FALSE_1
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto IF_FALSE_2
push this 7
not
if-goto IF_FALSE_3
push this 0
push constant 4
add
pop this 0
goto IF_END_3
label IF_FALSE_3
push this 1
push constant 4
add
pop this 1
label IF_END_3
goto IF_END_2
label IF_FALSE_2
push this 7
not
if-goto IF_FALSE_4
push this 0
push constant 4
sub
pop this 0
goto IF_END_4
label IF_FALSE_4
push this 1
push constant 4
sub
pop this 1
label IF_END_4
label IF_END_2
label IF_END_1
push this 8
not
if-goto IF_FALSE_5
push this 7
not
if-goto IF_FALSE_6
push this 1
push constant 4
add
pop this 1
goto IF_END_6
label IF_FALSE_6
push this 0
push constant 4
add
pop this 0
label IF_END_6
goto IF_END_5
label IF_FALSE_5
push this 7
not
if-goto IF_FALSE_7
push this 1
push constant 4
sub
pop this 1
goto IF_END_7
label IF_FALSE_7
push this 0
push constant 4
sub
pop this 0
label IF_END_7
label IF_END_5
push this 0
push this 10
gt
not
not
if-goto IF_FALSE_8
push constant 1
pop this 14
push this 10
pop this 0
goto IF_END_8
label IF_FALSE_8
label IF_END_8
push this 0
push this 11
lt
not
not
if-goto IF_FALSE_9
push constant 2
pop this 14
push this 11
pop this 0
goto IF_END_9
label IF_FALSE_9
label IF_END_9
push this 1
push this 12
gt
not
not
if-goto IF_FALSE_10
push constant 3
pop this 14
push this 12
pop this 1
goto IF_END_10
label IF_FALSE_10
label IF_END_10
push this 1
push this 13
lt
not
not
if-goto IF_FALSE_11
push constant 4
pop this 14
push this 13
pop this 1
goto IF_END_11
label IF_FALSE_11
label IF_END_11
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 0
push constant 0
eq
not
if-goto IF_FALSE_12
push constant 10
pop local 4
goto IF_END_12
label IF_FALSE_12
push this 2
push constant 0
lt
not
push argument 0
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 0
push constant 1
neg
eq
and
or
not
if-goto IF_FALSE_13
push constant 20
pop local 4
goto IF_END_13
label IF_FALSE_13
push constant 5
pop local 4
label IF_END_13
label IF_END_12
push this 14
push constant 1
eq
not
if-goto IF_FALSE_14
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END_14
label IF_FALSE_14
push this 14
push constant 2
eq
not
if-goto IF_FALSE_15
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END_15
label IF_FALSE_15
push this 14
push constant 3
eq
not
if-goto IF_FALSE_16
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto IF_END_16
label IF_FALSE_16
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label IF_END_16
label IF_END_15
label IF_END_14
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
,
  Bat:
function Bat.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push constant 2
pop this 4
push pointer 0
call Bat.show 1
pop temp 0
push pointer 0
return
function Bat.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Bat.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Bat.draw 1
pop temp 0
push constant 0
return
function Bat.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Bat.draw 1
pop temp 0
push constant 0
return
function Bat.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Bat.setDirection 0
push argument 0
pop pointer 0
push argument 0
pop this 4
push constant 0
return
function Bat.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Bat.getRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Bat.setWidth 0
push argument 0
pop pointer 0
push pointer 0
call Bat.hide 1
pop temp 0
push argument 0
pop this 2
push pointer 0
call Bat.show 1
pop temp 0
push constant 0
return
function Bat.move 0
push argument 0
pop pointer 0
push this 4
push constant 1
eq
not
if-goto IF_FALSE_0
push this 0
push constant 4
sub
pop this 0
push this 0
push constant 0
lt
not
if-goto IF_FALSE_1
push constant 0
pop this 0
goto IF_END_1
label IF_FALSE_1
label IF_END_1
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 1
add
push this 1
push this 0
push this 2
add
push constant 4
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 3
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
goto IF_END_0
label IF_FALSE_0
push this 0
push constant 4
add
pop this 0
push this 0
push this 2
add
push constant 511
gt
not
if-goto IF_FALSE_2
push constant 511
push this 2
sub
pop this 0
goto IF_END_2
label IF_FALSE_2
label IF_END_2
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 4
sub
push this 1
push this 0
push constant 1
sub
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 3
sub
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
label IF_END_0
push constant 0
return
,
  Main:
function Main.main 1
call PongGame.newInstance 0
pop temp 0
call PongGame.getInstance 0
pop local 0
push local 0
call PongGame.run 1
pop temp 0
push local 0
call PongGame.dispose 1
pop temp 0
push constant 0
return
,
  PongGame:
function PongGame.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push constant 50
pop this 6
push constant 230
push constant 229
push this 6
push constant 7
call Bat.new 4
pop this 0
push constant 253
push constant 222
push constant 0
push constant 511
push constant 0
push constant 229
call Ball.new 6
pop this 1
push this 1
push constant 400
push constant 0
call Ball.setDestination 3
pop temp 0
push constant 0
push constant 238
push constant 511
push constant 240
call Screen.drawRectangle 4
pop temp 0
push constant 22
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 8
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
pop this 3
push constant 0
pop this 4
push constant 0
pop this 2
push constant 0
pop this 5
push pointer 0
return
function PongGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Bat.dispose 1
pop temp 0
push this 1
call Ball.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function PongGame.newInstance 0
call PongGame.new 0
pop static 0
push constant 0
return
function PongGame.getInstance 0
push static 0
return
function PongGame.run 1
push argument 0
pop pointer 0
label WHILE_START_0
push this 3
not
not
if-goto WHILE_END_0
label WHILE_START_1
push local 0
push constant 0
eq
push this 3
not
and
not
if-goto WHILE_END_1
call Keyboard.keyPressed 0
pop local 0
push this 0
call Bat.move 1
pop temp 0
push pointer 0
call PongGame.moveBall 1
pop temp 0
push constant 50
call Sys.wait 1
pop temp 0
goto WHILE_START_1
label WHILE_END_1
push local 0
push constant 130
eq
not
if-goto IF_FALSE_0
push this 0
push constant 1
call Bat.setDirection 2
pop temp 0
goto IF_END_0
label IF_FALSE_0
push local 0
push constant 132
eq
not
if-goto IF_FALSE_1
push this 0
push constant 2
call Bat.setDirection 2
pop temp 0
goto IF_END_1
label IF_FALSE_1
push local 0
push constant 140
eq
not
if-goto IF_FALSE_2
push constant 0
not
pop this 3
goto IF_END_2
label IF_FALSE_2
label IF_END_2
label IF_END_1
label IF_END_0
label WHILE_START_2
push local 0
push constant 0
eq
not
push this 3
not
and
not
if-goto WHILE_END_2
call Keyboard.keyPressed 0
pop local 0
push this 0
call Bat.move 1
pop temp 0
push pointer 0
call PongGame.moveBall 1
pop temp 0
push constant 50
call Sys.wait 1
pop temp 0
goto WHILE_START_2
label WHILE_END_2
goto WHILE_START_0
label WHILE_END_0
push this 3
not
if-goto IF_FALSE_3
push constant 10
push constant 27
call Output.moveCursor 2
pop temp 0
push constant 9
call String.new 1
push constant 71
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
call Output.printString 1
pop temp 0
goto IF_END_3
label IF_FALSE_3
label IF_END_3
push constant 0
return
function PongGame.moveBall 5
push argument 0
pop pointer 0
push this 1
call Ball.move 1
pop this 2
push this 2
push constant 0
gt
push this 2
push this 5
eq
not
and
not
if-goto IF_FALSE_4
push this 2
pop this 5
push constant 0
pop local 0
push this 0
call Bat.getLeft 1
pop local 1
push this 0
call Bat.getRight 1
pop local 2
push this 1
call Ball.getLeft 1
pop local 3
push this 1
call Ball.getRight 1
pop local 4
push this 2
push constant 4
eq
not
if-goto IF_FALSE_5
push local 1
push local 4
gt
push local 2
push local 3
lt
or
pop this 3
push this 3
not
not
if-goto IF_FALSE_6
push local 4
push local 1
push constant 10
add
lt
not
if-goto IF_FALSE_7
push constant 1
neg
pop local 0
goto IF_END_7
label IF_FALSE_7
push local 3
push local 2
push constant 10
sub
gt
not
if-goto IF_FALSE_8
push constant 1
pop local 0
goto IF_END_8
label IF_FALSE_8
label IF_END_8
label IF_END_7
push this 6
push constant 2
sub
pop this 6
push this 0
push this 6
call Bat.setWidth 2
pop temp 0
push this 4
push constant 1
add
pop this 4
push constant 22
push constant 7
call Output.moveCursor 2
pop temp 0
push this 4
call Output.printInt 1
pop temp 0
goto IF_END_6
label IF_FALSE_6
label IF_END_6
goto IF_END_5
label IF_FALSE_5
label IF_END_5
push this 1
push local 0
call Ball.bounce 2
pop temp 0
goto IF_END_4
label IF_FALSE_4
label IF_END_4
push constant 0
return

}